@model WIPSystem.Web.ViewModels.ProductProcessRegistrationViewModel
@using WIPSystem.Web.Models

@{

    ViewBag.Title = "RegisterProcessFlow";
}
<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h2 class="text-uppercase text-center">Register Partno Process Flow</h2>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12 border-1 border">
            <form id="processForm" method="post" asp-action="SaveProcessFlow">
                <input type="hidden" asp-for="ProductId" />

                <div class="form-group">
                    <label asp-for="PartNo">PartNo</label>
                    <input type="text" asp-for="PartNo" class="form-control" readonly />
                </div>

                <div class="form-group">
                    <label asp-for="CustName">Customer Name</label>
                    <input type="text" asp-for="CustName" class="form-control" readonly />
                </div>

                <div id="processContainer">
                    @for (int i = 0; i < Model.SelectedProcesses.Count; i++)
                    {
                        <div class="form-group">
                            <select asp-for="@Model.SelectedProcesses[i].ProcessId" asp-items="@(new SelectList(Model.AvailableProcesses, "ProcessId", "ProcessName"))" class="form-control"></select>
                            <span asp-validation-for="@Model.SelectedProcesses[i].ProcessId" class="text-danger"></span>
                            <input type="number" asp-for="@Model.SelectedProcesses[i].Sequence" class="form-control" placeholder="Enter sequence for selected process" />
                            <span asp-validation-for="@Model.SelectedProcesses[i].Sequence" class="text-danger"></span>
                        </div>
                    }
                </div>

                <button type="button" id="addAnotherProcess" class="btn btn-success">
                    <i class="fas fa-plus"></i>
                </button>
                <button type="submit" class="btn btn-primary">Submit</button>
            </form>

        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Check if a process is already selected
        function isProcessAlreadySelected(processId, currentSelect) {
            var selects = document.querySelectorAll('select');
            for (let i = 0; i < selects.length; i++) {
                if (selects[i] !== currentSelect && selects[i].value == processId) {
                    return true;
                }
            }
            return false;
        }
        document.addEventListener("DOMContentLoaded", function () {
            var currentProcessCount = @Model.SelectedProcesses.Count;
            var processContainer = document.getElementById('processContainer');
            var addAnotherProcessButton = document.getElementById('addAnotherProcess');

            addAnotherProcessButton.addEventListener('click', function () {
                var newProcessGroup = document.createElement('div');
                newProcessGroup.className = "form-group d-flex justify-content-between align-items-center";

                // Create Select element
                var newSelect = document.createElement('select');
                newSelect.name = "SelectedProcesses[" + currentProcessCount + "].ProcessId";
                newSelect.className = "form-control flex-fill mr-2";

        @foreach (var process in Model.AvailableProcesses)
        {
            <text>
             var option = document.createElement('option');
                    option.value = "@process.ProcessId";
                    option.text = "@process.ProcessName";
                    newSelect.appendChild(option);
            </text>
        }

                    newSelect.addEventListener('change', function () {
                        if (isProcessAlreadySelected(this.value, this)) {
                            this.value = '';
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: 'This process is already chosen!'
                            });
                        }
                    });

                var newInput = document.createElement('input');
                newInput.type = "number";
                newInput.name = "SelectedProcesses[" + currentProcessCount + "].Sequence";
                newInput.className = "form-control flex-fill mr-2";
                newInput.placeholder = "Enter sequence";

                var removeIcon = document.createElement('button');
                removeIcon.className = "btn btn-danger";
                removeIcon.innerHTML = '<i class="bi bi-trash"></i>';
                removeIcon.onclick = function () {
                    processContainer.removeChild(newProcessGroup);
                };

                newProcessGroup.appendChild(newSelect);
                newProcessGroup.appendChild(newInput);
                newProcessGroup.appendChild(removeIcon);

                processContainer.appendChild(newProcessGroup);
                currentProcessCount++;
            });

            // var printButton = document.getElementById('printButton');
            // if (printButton) {
            //     printButton.addEventListener('click', function () {
            //         window.location.href = '/YourControllerName/PrintPage';
            //     });
            // }

            // Attach a submit event listener to your form

            $('#processForm').submit(function (e) {
                e.preventDefault();
                var formData = new FormData(this); // Changed to FormData object

                // Perform the AJAX request
                $.ajax({
                    type: 'POST',
                    url: '/Product/SaveProcessFlow',
                    data: JSON.stringify(formData), // Make sure formData is an object here, not a FormData instance
                    contentType: 'application/json',
                    processData: false,

                    success: function (response) {
                        if (response.success) {
                            // If the response is successful, show an alert and then redirect
                            alert('Process flow for ' + $('#PartNo').val() + ' added successfully.');
                            window.location.href = '/Product/Index';
                        } else {
                            // If there are errors and it's an array, display them
                            var errorMessages = "There were errors saving the process flow.";
                            if (Array.isArray(response.errors)) {
                                errorMessages += "\n" + response.errors.join("\n");
                            }
                            alert(errorMessages);
                        }
                    },

                    error: function (xhr, status, error) {
                        // Handle request errors
                        var errorMessage = xhr.status + ': ' + xhr.statusText;
                        alert('Error - ' + errorMessage);
                    }
                });
            });
        });
    </script>
}




